@startuml
'https://plantuml.com/class-diagram

Class ListManager {
    main()
    start()
}
Class ListManagerController {
    model: ListManagerModel
    popupModel: PopUpWindow
    listDisplay: TableView
    descColumn: TableColumn<ListItem, String>
    dateColumn: TableColumn<ListItem, String>
    statusColumn: TableColumn<ListItem, String>
    completeStatus: CheckMenuItem
    incompleteStatus: CheckMenuItem
    complete: boolean
    incomplete: boolean
    currentIndex: int

    mainWindowEntered()
    initialize()
    addItemButtonClicked()
    editItemButtonClicked()
    deleteItemButtonClicked()
    includeCompleteButtonClicked()
    includeIncompleteButtonClicked()
    clearListButtonClicked()
    saveButtonClicked()
    loadButtonClicked()
    tableClicked()
    tableRightClicked()
    refreshList()
    helpButtonClicked()
}
Class ListManagerModel {
    currentList: ObservableList<ListItem>
    currentIndex: int

    newList()
    addItem(String desc, String date, String status)
    selectItem(int index)
    removeItem()
    editItem(String desc, String date)
    getSelectedItemDesc()
    getSelectedItemDate()
    flipStatus()
    display(Boolean complete, Boolean incomplete)
    saveList(File file)
    loadList(File file)
}

Class ListItem {
    desc: SimpleStringProperty
    date: SimpleStringProperty
    status: SimpleStringProperty

    ListItem(String desc, String date, String status)
    getDesc()
    getDate()
    getStatus()
}

Class CreateItemController {
    descriptionInput: TextArea
    dateInput: DatePicker

    initialize()
    addButtonClicked()
    CancelButtonClicked()
}
Class PopUpWindow {
    popup: Stage
    createWindow(String path, String title)
    closeWindow()
}

ListManager -|> org.javafx.Application
ListManager -- ListManagerController
ListManagerController *--> ListManagerModel
ListManagerModel *-> ListItem
ListManagerController *--> PopUpWindow
PopUpWindow -- CreateItemController
CreateItemController <-- ListManagerController

@enduml